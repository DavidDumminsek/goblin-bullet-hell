\hypertarget{classEnemy}{}\doxysection{Enemy Class Reference}
\label{classEnemy}\index{Enemy@{Enemy}}


Inheritance diagram for Enemy\+:
% FIG 0


Collaboration diagram for Enemy\+:
% FIG 1
\doxysubsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{classEnemy_add4a2f38ec14c1b579504ade58adea93}\label{classEnemy_add4a2f38ec14c1b579504ade58adea93}} 
{\bfseries Enemy} (float xc, float yc, float spd, int l, int dmg, std\+::string mv, std\+::string mv\+Pro, float p\+Speed, int fire\+Rate, int current)
\item 
void \mbox{\hyperlink{classEnemy_af014a64bfea4d3653ffe5fe5bfadd4ab}{move}} (int tick) override
\item 
std\+::unique\+\_\+ptr$<$ \mbox{\hyperlink{classProjectile}{Projectile}} $>$ \mbox{\hyperlink{classEnemy_a67edb4b865cb32d594ea306f5cf679aa}{shoot}} (int tick)
\end{DoxyCompactItemize}
\doxysubsection*{Additional Inherited Members}


\doxysubsection{Member Function Documentation}
\mbox{\Hypertarget{classEnemy_af014a64bfea4d3653ffe5fe5bfadd4ab}\label{classEnemy_af014a64bfea4d3653ffe5fe5bfadd4ab}} 
\index{Enemy@{Enemy}!move@{move}}
\index{move@{move}!Enemy@{Enemy}}
\doxysubsubsection{\texorpdfstring{move()}{move()}}
{\footnotesize\ttfamily void Enemy\+::move (\begin{DoxyParamCaption}\item[{int}]{tick }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [override]}, {\ttfamily [virtual]}}

Changes x and y coordinates

This function changes the x and y variable members based on the movment variable member and tick parameter 
\begin{DoxyParams}{Parameters}
{\em tick} & Current tick from \mbox{\hyperlink{classGame}{Game}} class, can be used to change movement behaviour \\
\hline
\end{DoxyParams}


Implements \mbox{\hyperlink{classEntity_ae8f41087d348f84540f65d158a91cf0b}{Entity}}.

\mbox{\Hypertarget{classEnemy_a67edb4b865cb32d594ea306f5cf679aa}\label{classEnemy_a67edb4b865cb32d594ea306f5cf679aa}} 
\index{Enemy@{Enemy}!shoot@{shoot}}
\index{shoot@{shoot}!Enemy@{Enemy}}
\doxysubsubsection{\texorpdfstring{shoot()}{shoot()}}
{\footnotesize\ttfamily std\+::unique\+\_\+ptr$<$ \mbox{\hyperlink{classProjectile}{Projectile}} $>$ Enemy\+::shoot (\begin{DoxyParamCaption}\item[{int}]{tick }\end{DoxyParamCaption})}

Creates and returns a \mbox{\hyperlink{classProjectile}{Projectile}} pointer

This function creates a projectile pointer. 
\begin{DoxyParams}{Parameters}
{\em tick} & Current tick from \mbox{\hyperlink{classGame}{Game}} class, used to detirmine how often to create a \mbox{\hyperlink{classProjectile}{Projectile}} \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
A \mbox{\hyperlink{classProjectile}{Projectile}} if tick is divisible by fire\+Rate 

nullptr If tick is not divisible by fire\+Rate 
\end{DoxyReturn}


The documentation for this class was generated from the following files\+:\begin{DoxyCompactItemize}
\item 
enemy.\+h\item 
enemy.\+cc\end{DoxyCompactItemize}
